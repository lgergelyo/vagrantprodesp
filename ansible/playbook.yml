- hosts: rancher
  become: yes
  # user: vagrant
  remote_user: vagrant

  tasks:
  - name: Atualiza Linux
    yum:
      update_only: yes
      update_cache: yes

  - name: Instalar GIT
    yum:
      name: git
      state: latest
  
  - name: Instalar utils
    yum:
      name: yum-utils
      state: latest

  - name: Instalar net-tools device mapper e lvm2
    yum:
      name: 
        - net-tools
        - device-mapper-persistent-data 
        - lvm2
      state: latest

  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo
    become: yes

  - name: Enable Docker Edge repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce-edge'
      option: enabled
      value: 0
    become: yes

  - name: Enable Docker Test repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce-test'
      option: enabled
      value: 0
    become: yes

  - name: Install Docker
    package:
      name: docker-ce
      state: latest
    become: yes

  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes
    become: yes

  - name: Adicionar usuário vagrant no docker
    user:
      name: vagrant
      groups: docker
      append: yes
    become: yes
  - name: Ensure docker-compose is installed and available
    shell: curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose


  - name: Alterar permissão do docker-compose
    ansible.builtin.file:
      path: /usr/bin/docker-compose
      owner: vagrant
      group: docker
      mode: '0755'

  - name: Login docker
    docker_login:
      username: lgergely
      password: leandrojust
      email: leandrotecnico@terra.com.br


  # - name: Download e instalação do Docker Compose
  #   get_url:
  #     url: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
  #     dest: /usr/bin/docker-compose
  #     mode: 0755
  #   when:
  #     - docker_compose_check.msg is defined
  #     - docker_compose_check.msg.find('Diretório não encontrado') != -1

  # - name: Criar grupo docker se não existir
  #   ansible.builtin.group:
  #     name: docker
  #     state: present

  # - name: Adicionar usuário no grupo docker
  #   ansible.builtin.user:
  #     name: vagrant
  #     comment: Vagrant
  #     uid: 1000
  #     group: docker

  # - name: Permissão usuário docker
  #   command:
  #     argv:
  #       - sudo groupadd docker
  #       - sudo usermod -aG docker ${USER}
  #       - sudo su -s ${USER}
  #       - docker run hello-world


  # - name: Perissão usuário docker
  #   command: systemctl start docker

  # - name: Add specified repository into sources list
  #   ansible.builtin.apt_repository:
  #     repo: https://download.docker.com/linux/centos/docker-ce.repo hardy partner
  #     state: present

  # - name: Adicionar repositório do Docker
  #   yum_repository:
  #     name: dicker
  #     description: Docker ce
  #     baseurl: https://download.docker.com/linux/centos/docker-ce.repo

  # - name: Verificar se o Docker está instalado
  #   command: systemctl status docker
  #   register: docker_check
  #   ignore_errors: yes

  # - name: Instalar Docker
  #   yum:
  #     name: 
  #       - docker-ce 
  #       - docker-ce-cli 
  #       - containerd.io
  #     state: latest

  # - name: Iniciar o Docker
  #   command: systemctl start docker

  # - name: Habilitar o serviço do Docker
  #   command: systemctl enable docker

  # - name: Verificar o status do serviço do Docker
  #   command: systemctl status docker

  # - name: Verificar o status do serviço do Docker
  #   command: sudo docker --version







  # - name: Verificar se o Docker está instalado
  #   command: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  # - name: Download do instalador Docker
  #   get_url:
  #     url: https://get.docker.com/
  #     dest: /root/install_docker.sh
  #     mode: 0700
  #   when: docker_check.stderr.find('service could not be found') != -1

  # - name: Instalando Docker
  #   shell: /root/install_docker.sh
  #   when: docker_check.stderr.find('service could not be found') != -1

  # - name: Remove os arquivos de instalação docker.
  #   file:
  #     state: absent
  #     path: /root/install_docker.sh

  # - name: Habilitar o Docker daemon no systemd
  #   systemd:
  #     name: docker
  #     enabled: yes
  #     masked: no

  # - name: Iniciar o Docker daemon
  #   systemd:
  #     name: docker
  #     state: started
  #     masked: no

  # - name: Verificar se o Docker Compose está instalado
  #   command: docker-compose --version
  #   register: docker_compose_check
  #   ignore_errors: yes











  # - name: Instalação docker-compose 
  #   pip:
  #     name: docker-compose


  # - name: Criar diretório
  #   file:
  #     path: /usr/local/bin/docker-compose
  #     state: directory


  # - name: Download e instalação do Docker Compose
  #   get_url:
  #     url: sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-Linux-x86_64
  #     dest: /usr/local/bin/docker-compose
  #     mode: 0755
  #   when:
  #     - docker_compose_check.msg is defined
  #     - docker_compose_check.msg.find('Diretório não encontrado') != -1

  
  # - name: Instalar epel
  #   yum:
  #     name: epel-release
  #     state: latest

  # - name: Instalar PIP
  #   yum:
  #     name: python-pip
  #     state: latest
  
  # - name: Atualizar o pip
  #   command: pip install --upgrade pip


  # - name: Instalar Microk8s
  #   snap:
  #     name: "microk8s"
  #     channel: '1.21/stable'
  #     classic: yes
  #   become: yes  

  # - name: Adicionar ao Grupo
  #   ansible.builtin.user:
  #     name: vagrant
  #     group: microk8s
  
  # - name: Adicionar pasta
  #   ansible.builtin.shell: mkdir $HOME/.kube/
  #   # file:
  #   #   path: $HOME/.kube/
  #   #   state: directory

  # - name: Permissao Kube
  #   file:
  #     path:  ~/.kube
  #     owner: "vagrant"
  #     group: "microk8s"
  #     mode: 777

  # - name: Copy config Microk8s\
  #   ansible.builtin.shell: microk8s config > $HOME/.kube/config

  # - name: Enable tools Microk8s\
  #   ansible.builtin.shell: microk8s enable ha-cluster dashboard rbac

  # - name: Resetar Microk8s\
  #   ansible.builtin.shell: microk8s stop

  # - name: Resetar Microk8s\
  #   ansible.builtin.shell: microk8s start

